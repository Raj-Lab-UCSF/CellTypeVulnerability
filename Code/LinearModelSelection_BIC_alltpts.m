function [mdls_bic,subclasses_bic,Xct_i,Y,logpmat] = LinearModelSelection_BIC_alltpts(datsetname_,outputs,Xct_,...
    subclasses_,corrtype_,usebic,datasource,bicplotting,lmplotting,cmap_,savenclose,figdir_,matdir_)

% Select models based on AIC or BIC
if usebic
    crit_calc = @(x,y,z) -2*x + (y * log(z));
else
    crit_calc = @(x,y,z) -2*x + 2*y;
end

% Pre-filtering cell types based on significant correlations
ts = outputs.(datsetname_).time_stamps;
[critmat,logpmat] = CorrelationCalculator_singledataset(datsetname_,outputs,...
                            Xct_,corrtype_,matdir_);
sigtypes_corrp05 = cell(1,length(ts)); 
sigthreshp05 = -log10(0.05);
prctthresh = prctile(logpmat,75,2);
for i = 1:length(ts)
    siginds = logpmat(i,:) > sigthreshp05;
    quartinds = logpmat(i,:) > prctthresh(i);
    sigtypes_corrp05{i} = find((siginds + quartinds) == 2);
end
datsetlabel = strrep(datsetname_,'_',' ');

% Finding BIC model and plotting
Y_s = cell(1,length(ts));
sigtypes_bic = cell(1,length(ts));
mdls_bic = cell(1,length(ts));
Y_preds_bic = mdls_bic;
subclasses_bic = mdls_bic;
pvals_bic = zeros(1,length(ts));

if bicplotting
    tlabels = cell(1,length(ts));
    for i = 1:length(tlabels)
        tlabels{i} = sprintf('Time = %d',ts(i));
    end
    if isempty(cmap_)
        cmap = hsv(length(ts));
    else
        cmap = cmap_;
    end
    shapes = {'o','s','d','^','v','<','>','p','h','+','.','x'};
    if length(ts) == 3
        f1 = figure('Units','inches','Position',[0,0,25,6.5]);
    elseif length(ts) == 4
        f1 = figure('Units','inches','Position',[0,0,25,5]);
    else
        f1 = figure('Units','inches','Position',[0,0,25,6]);
    end
    sgtitle('BIC Plots','FontName','Times','FontSize',24);
    set(gca,'FontName','Times','FontSize',24);
end

for i = 1:length(ts)
    % Threshold by coefficient value from bootstrapped OLS, use only
    % significant values for BIC model selection
    sigtypeinds_i = sigtypes_corrp05{i};
    subclasses_i = subclasses_(sigtypeinds_i);
    datamat_i = critmat(i,sigtypeinds_i);
    [~,sortinds_i] = sort(abs(datamat_i),'descend');
    subclasses_i_sort = subclasses_i(sortinds_i);
    Y = outputs.(datsetname_).data(:,i);
%     naninds = isnan(Y);
%     Y = Y(~naninds);
    Y_s{i} = Y;
    Xct_i = CCFToData(Xct_,datsetname_,matdir_);
%     Xct_i = Xct_(~naninds,:);    
    Xct_maxes = repmat(max(Xct_i),size(Xct_i,1),1);
    Xct_i = Xct_i./Xct_maxes;
    bics = zeros(1,length(sigtypeinds_i));
    
    for j = 1:length(sigtypeinds_i)
        subclasses_ij = subclasses_i_sort(1:j); 
        Xct_ij= Xct_i(:,ismember(subclasses_,subclasses_ij));
        mdls_coeff_j = fitlm(Xct_ij,Y);
        bics(j) = crit_calc(mdls_coeff_j.LogLikelihood,(j+1),length(Y));
    end

    [~, modelind] = min(bics);
    subclasses_bic{i} = sort(subclasses_i_sort(1:modelind));
    sigtypes_bic{i} = find(ismember(subclasses_,subclasses_bic{i}));
    Xct_bic = Xct_i(:,sigtypes_bic{i});
    mdls_bic{i} = fitlm(Xct_bic,Y);
    Y_preds_bic{i} = [ones(length(Y),1), Xct_bic]...
        * mdls_bic{i}.Coefficients.Estimate;
    pvals_bic(i) = coefTest(mdls_bic{i});

    if bicplotting
        figure(f1)
        subplot(1,length(ts),i); hold on;
        scatter(1:length(sigtypeinds_i),bics,75,cmap(i,:),shapes{i},'filled'); 
        max_x = length(sigtypeinds_i); max_y = max(bics);
        min_x = 0; min_y = min(bics);
        xlim([min_x max_x]); ylim([min_y max_y]); 
        xticks([1 length(sigtypeinds_i)]); yticks([min_y,max_y]);
        ytickformat('%.2d')
        plot([modelind modelind],[min_y max_y],'LineWidth',2,'Color','k');
        title(tlabels{i}); xlabel('n');
        if i == 1
            ylabel('BIC');
        end
        text(0.6*(max_x-min_x)+min_x, 0.875*(max_y-min_y)+min_y,...
            sprintf('n_B_I_C = %d',length(subclasses_bic{i})),'FontName','Times','FontSize',20);
        set(gca,'FontSize',24,'FontName','Times');
    end
end
if bicplotting
    if savenclose
        print([figdir_ filesep 'BIC_Plots_' datsetlabel '_' datasource],'-dtiffn','-r600'); close;
    end
end

if lmplotting
    if length(ts) == 3
        f = figure('Units','inches','Position',[0,0,18,7.5]);
    elseif length(ts) == 4
        f = figure('Units','inches','Position',[0,0,30,7.5]);
        tiledlayout(1,4);
    else
        f = figure('Units','inches','Position',[0,0,25,8]);
    end
    tlabels = cell(1,length(ts));
    for i = 1:length(tlabels)
        tlabels{i} = sprintf('Time = %d',ts(i));
    end
    if isempty(cmap_)
        cmap = hsv(length(ts));
    else
        cmap = cmap_;
    end
    shapes = {'o','s','d','^','v','<','>','p','h','+','.','x'};
%     maxYs = zeros(1,length(ts)); maxXs = maxYs;
%     minYs = zeros(1,length(ts)); minXs = minYs;
%     for i = 1:length(ts)
%         maxYs(i) = max(Y_s{i});
%         maxXs(i) = max(Y_preds_bic{i});
%         minYs(i) = min(Y_s{i});
%         minXs(i) = min(Y_preds_bic{i});
%     end
%     max_x = max(maxXs); max_y = max(maxYs);
%     min_x = min(minXs); min_y = min(minYs);
    for i = 1:length(ts)
        nexttile; hold on;
%         subplot(1,length(ts),i); hold on;
        scatter(Y_preds_bic{i},Y_s{i},75,cmap(i,:),shapes{i},'filled');
        h = lsline; set(h,'LineWidth',2,'Color','k','LineStyle','--');
        max_x = max(Y_preds_bic{i}); max_y = max(Y_s{i});
        min_x = min(Y_preds_bic{i}); min_y = min(Y_s{i});
        xlim([min_x max_x]); ylim([min_y max_y*1.05]);
        xticks([min_x (max_x+min_x)/2 max_x]); yticks([min_y (max_y+min_y)/2 max_y]);
        if round(min_x,2) ~= 0 
            xticklabels({num2str(min_x,'%.2f'),num2str((max_x+min_x)/2,'%.2f'),...
                num2str(max_x,'%.2f')});
        else
            xticklabels({'0',num2str((max_x+min_x)/2,'%.2f'),...
                num2str(max_x,'%.2f')});
        end
        if strcmp(datsetname_,'Clavaguera')
            yticklabels({num2str(min_y,'%.3f'),num2str((max_y+min_y)/2,'%.2f'),...
                    num2str(max_y,'%.2f')});
        else
            if round(min_y,2) ~= 0 
                yticklabels({num2str(min_y,'%.2f'),num2str((max_y+min_y)/2,'%.2f'),...
                    num2str(max_y,'%.2f')});
            else
                yticklabels({'0',num2str((max_y+min_y)/2,'%.2f'),...
                    num2str(max_y,'%.2f')});
            end
        end        
        pstr = '';
        if pvals_bic(i) < 0.01/length(ts)
            pstr = [pstr '^*'];
            if pvals_bic(i) < 0.001/length(ts)
                pstr = [pstr '^*'];
                if pvals_bic(i) < 0.0001/length(ts)
                    pstr = [pstr '^*'];
                end
            end
        end
        text(0.05*(max_x-min_x)+min_x, 0.925*(max_y-min_y)+min_y,...
            {sprintf('R^2 = %.2f%s',mdls_bic{i}.Rsquared.Adjusted,pstr),...
            sprintf('n = %d',length(subclasses_bic{i}))},'FontName','Times','FontSize',24);
        title(tlabels{i},'FontSize',24);
        set(gca,'FontName','Times','FontSize',24,'box','on');
    end
    han=axes(f,'visible','off'); 
    han.XLabel.Visible='on';
    han.YLabel.Visible='on';
    ylh = ylabel(han,'Observed Pathology','FontSize',28,...
        'FontName','Times','FontWeight','bold');
    ylh.Position(1) = ylh.Position(1) - abs(ylh.Position(1) * 9.75);
    xlh = xlabel(han,'Predicted Pathology','FontSize',28,...
        'FontName','Times','FontWeight','bold');
    xlh.Position(2) = xlh.Position(2) - abs(xlh.Position(2) * 0.6);
    if savenclose
        print([figdir_ filesep 'LinearModelPlots_Coeffs_BIC_' datsetlabel '_AllTimePoints_' datasource],'-dtiffn','-r600'); close;
    end
end
end