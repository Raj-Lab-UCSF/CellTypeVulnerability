function [mdls_topN,subclasses_topN] = LinearModelSelection_TopN(datsetnames_,...
    outputs,Xct_,subclasses_,numsigtypes_,corrtype_,datasource,lmplotting,savenclose,figdir_)

[critmat,~] = CorrelationCalculator_endtimepoint(datsetnames_,outputs,...
                            Xct_,corrtype_);
Y_ends = cell(1,length(datsetnames_));
sigtypes_topN = cell(1,length(datsetnames_));
mdls_topN = cell(1,length(datsetnames_));
Y_preds_topN = mdls_topN;
subclasses_topN = mdls_topN;

for i = 1:length(datsetnames_)
    % Establish top N types by corr.
    [~,corrsortinds] = sort(abs(critmat(i,:)),'descend');
    corrinds_topN = sort(corrsortinds(1:numsigtypes_));

    % Fit models for top N types
    datsetname = datsetnames_{i};
    Y = outputs.(datsetname).data;
    naninds = isnan(Y(:,1));
    Y_end = Y(~naninds,end);
    Y_ends{i} = Y_end;
    Xct_i = Xct_(~naninds,:);    
    Xct_maxes = repmat(max(Xct_i),size(Xct_i,1),1);
    Xct_i = Xct_i./Xct_maxes;
    Xct_topN = Xct_i(:,corrinds_topN);
    mdls_topN{i} = fitlm(Xct_topN,Y_end);
    Y_preds_topN{i} = [ones(length(Y_end),1), Xct_topN]...
        * mdls_topN{i}.Coefficients.Estimate;
    subclasses_topN{i} = subclasses_(corrinds_topN);
    sigtypes_topN{i} = corrinds_topN;
end

if lmplotting
    if length(datsetnames_) == 9
        f = figure('Units','inches','Position',[0,0,15,10]);
    elseif length(datsetnames_) == 10
        f = figure('Units','inches','Position',[0,0,20,8]);
    else
        f = figure('Units','inches','Position',[0,0,20,15]);
    end
    datsetlabels = cellfun(@(x) strrep(x,'_',' '), datsetnames_,'UniformOutput',0);
    cmap = hsv(length(datsetnames_));
    shapes = {'o','s','d','^','v','<','>','p','h','+','.','x'};
    for i = 1:length(datsetnames_)
        if length(datsetnames_) == 9
            subplot(3,3,i); hold on;
        elseif length(datsetnames_) == 10
            subplot(2,5,i); hold on;
        else
            subplot(3,4,i); hold on;
        end
        scatter(Y_preds_topN{i},Y_ends{i},50,cmap(i,:),shapes{i});
        h = lsline; set(h,'LineWidth',2,'Color','k','LineStyle','--');
        max_x = max(Y_preds_topN{i}); max_y = max(Y_ends{i});
        min_x = min(Y_preds_topN{i}); min_y = min(Y_ends{i});
        xlim([min_x max_x]); ylim([min_y max_y*1.05]);
        xticks([min_x (max_x+min_x)/2 max_x]); yticks([min_y (max_y+min_y)/2 max_y]);
        if round(min_x,2) ~= 0 
            xticklabels({num2str(min_x,'%.2f'),num2str((max_x+min_x)/2,'%.2f'),...
                num2str(max_x,'%.2f')});
        else
            xticklabels({'0',num2str((max_x+min_x)/2,'%.2f'),...
                num2str(max_x,'%.2f')});
        end
        if strcmp(datsetnames_{i},'Clavaguera')
            yticklabels({num2str(min_y,'%.3f'),num2str((max_y+min_y)/2,'%.2f'),...
                    num2str(max_y,'%.2f')});
        else
            if round(min_y,2) ~= 0 
                yticklabels({num2str(min_y,'%.2f'),num2str((max_y+min_y)/2,'%.2f'),...
                    num2str(max_y,'%.2f')});
            else
                yticklabels({'0',num2str((max_y+min_y)/2,'%.2f'),...
                    num2str(max_y,'%.2f')});
            end
        end
        % ax = gca; ax.YAxis.Exponent = -1; ax.XAxis.Exponent = -1;
        text(0.05*(max_x-min_x)+min_x, 0.875*(max_y-min_y)+min_y, {sprintf('R^2 = %.2f',mdls_topN{i}.Rsquared.Adjusted),...
            sprintf('n = %d',length(subclasses_topN{i}))},'FontName','Times','FontSize',16);
        title(datsetlabels{i},'FontSize',20);
        set(gca,'FontSize',16,'FontName','Times');
    end
    han=axes(f,'visible','off'); 
    han.XLabel.Visible='on';
    han.YLabel.Visible='on';
    ylh = ylabel(han,'Observed Pathology at End Time Point','FontSize',20,...
        'FontName','Times','FontWeight','bold');
    ylh.Position(1) = ylh.Position(1) - abs(ylh.Position(1) * 0.75);
    xlh = xlabel(han,'Predicted Pathology at End Time Point','FontSize',20,...
        'FontName','Times','FontWeight','bold');
    xlh.Position(2) = xlh.Position(2) - abs(xlh.Position(2) * 0.5);
    if savenclose
        print([figdir_ filesep sprintf('LinearModelPlots_Coeffs_Top%d_%s',numsigtypes_,datasource)],'-dtiffn','-r600'); close;
    end
end
% end
% %% 5. Linear models, top correlations
% % numsigtypes = 5;
% numsigtypes = length(classkey);
% Y_ends = cell(1,length(datsetnames));
% sigtypes_corr_topn = cell(1,length(datsetnames));
% mdls_corr_topn = cell(1,length(datsetnames));
% Y_preds_corr_topn = mdls_corr_topn;
% subclasses_corr_topn = mdls_corr_topn;
% 
% % sigtypes_corr_bic = cell(1,length(datsetnames));
% % mdls_corr_bic = cell(1,length(datsetnames));
% % Y_preds_corr_bic = mdls_corr_bic;
% % subclasses_corr_bic = mdls_corr_bic;
% 
% sigtypes_parcorr_topn = cell(1,length(datsetnames));
% mdls_parcorr_topn = cell(1,length(datsetnames));
% Y_preds_parcorr_topn = mdls_parcorr_topn;
% subclasses_parcorr_topn = mdls_parcorr_topn;
% 
% % sigtypes_parcorr_bic = cell(1,length(datsetnames));
% % mdls_parcorr_bic = cell(1,length(datsetnames));
% % Y_preds_parcorr_bic = mdls_parcorr_bic;
% % subclasses_parcorr_bic = mdls_parcorr_bic;
% 
% sigtypes_coeff_bic = cell(1,length(datsetnames));
% mdls_coeff_bic = cell(1,length(datsetnames));
% Y_preds_coeff_bic = mdls_coeff_bic;
% subclasses_coeff_bic = mdls_coeff_bic;
% 
% plotting = 1;
% savenclose = 0;
% for i = 1:length(datsetnames)
%     % Establish top N types by corr. and partial corr.
%     [~,corrsortinds] = sort(abs(corrmat_all(i,:)),'descend');
%     corrinds_topn = sort(corrsortinds(1:numsigtypes));
%     sigtypes_corr_topn{i} = corrinds_topn;
%     [~,parcorrsortinds] = sort(abs(parcorrmat_all(i,:)),'descend');
%     parcorrinds_topn = sort(parcorrsortinds(1:numsigtypes));
%     sigtypes_parcorr_topn{i} = parcorrinds_topn;
% 
%     % Threshold by coefficient value from bootstrapped OLS, use only
%     % significant values for BIC model selection
%     sigtypeinds_B0_i = sigtypeinds_0{i};
%     subclasses_B0_i = subclasses(sigtypeinds_B0_i);
%     B_mean_0_i = B_mean_0(sigtypeinds_B0_i);  
%     [~,coeffsortinds_B0] = sort(abs(B_mean_0_i),'descend');
%     subclasses_B0_i_sort = subclasses_B0_i(coeffsortinds_B0);
%     
%     % Fit models for top N types
%     datsetname = datsetnames{i};
%     Y = outputs_R2studies.(datsetname).data;
%     naninds = isnan(Y(:,1));
%     Y_end = Y(~naninds,end);
%     Y_ends{i} = Y_end;
% %     Xct = Tasic_ng606(~naninds,:);
%     Xct = Yao_nG1300(~naninds,:);
%     Xct_sums = repmat(max(Xct),size(Xct,1),1);
%     Xct_norm = Xct./Xct_sums;
%     Xct_norm_corr_topn = Xct_norm(:,corrinds_topn);
%     mdls_corr_topn{i} = fitlm(Xct_norm_corr_topn,Y_end);
%     Y_preds_corr_topn{i} = [ones(length(Y_end),1), Xct_norm_corr_topn]...
%         * mdls_corr_topn{i}.Coefficients.Estimate;
%     subclasses_corr_topn{i} = subclasses(corrinds_topn);
%     Xct_norm_parcorr_topn = Xct_norm(:,parcorrinds_topn);
%     mdls_parcorr_topn{i} = fitlm(Xct_norm_parcorr_topn,Y_end);
%     Y_preds_parcorr_topn{i} = [ones(length(Y_end),1), Xct_norm_parcorr_topn]...
%         * mdls_parcorr_topn{i}.Coefficients.Estimate;
%     subclasses_parcorr_topn{i} = subclasses(parcorrinds_topn);
%     
%     % Fit models based on BIC
%     bic_calc = @(x,y,z) -2*x + (y * log(z));
%     bics_coeff = zeros(1,length(sigtypeinds_B0_i));
% %     bics_parcorr = zeros(1,size(corrmat_all,2));
%     for j = 1:length(sigtypeinds_B0_i)
%         subclasses_ij = subclasses_B0_i_sort(1:j); 
%         Xct_norm_coeff_j = Xct_norm(:,ismember(subclasses,subclasses_ij));
%         mdls_coeff_j = fitlm(Xct_norm_coeff_j,Y_end);
%         bics_coeff(j) = bic_calc(mdls_coeff_j.LogLikelihood,(j+1),length(Y_end));
% %         parcorrinds_j = sort(parcorrsortinds(1:j));
% %         Xct_norm_parcorr_j = Xct_norm(:,parcorrinds_j);
% %         mdls_parcorr_j = fitlm(Xct_norm_parcorr_j,Y_end);
% %         bics_parcorr(j) = bic_calc(mdls_parcorr_j.LogLikelihood,(j+1),length(Y_end));
%     end
%     if plotting
%         figure; scatter(1:length(sigtypeinds_B0_i),bics_coeff); title(datsetname); xlabel('n'); ylabel('BIC');
%     end
%     [~, modelind_coeff] = min(bics_coeff);
%     subclasses_coeff_bic{i} = sort(subclasses_B0_i_sort(1:modelind_coeff));
%     sigtypes_coeff_bic{i} = find(ismember(subclasses,subclasses_coeff_bic{i}));
%     Xct_norm_coeff_bic = Xct_norm(:,sigtypes_coeff_bic{i});
%     mdls_coeff_bic{i} = fitlm(Xct_norm_coeff_bic,Y_end);
%     Y_preds_coeff_bic{i} = [ones(length(Y_end),1), Xct_norm_coeff_bic]...
%         * mdls_coeff_bic{i}.Coefficients.Estimate;
% 
% if plotting
%     % Corr, top N
%     f = figure('Name','CorrTopN','units','inch','position',[0 0 15 11]);
%     cmap = hsv(length(datsetnames));
%     for i = 1:length(datsetnames)
%         subplot(3,4,i); % fix later for not 8 datasets
%         scatter(Y_preds_corr_topn{i},Y_ends{i},30,cmap(i,:),shapes{i});
%         h = lsline; set(h,'LineWidth',2,'Color','k','LineStyle','--');
%         max_x = max(Y_preds_corr_topn{i}); max_y = max(Y_ends{i});
%         min_x = min(Y_preds_corr_topn{i}); min_y = min(Y_ends{i});
%         xlim([min_x max_x]); ylim([min_y max_y*1.05]);
%         xticks([min_x (max_x+min_x)/2 max_x]); yticks([min_y (max_y+min_y)/2 max_y]);
%         if round(min_x,2) ~= 0 
%             xticklabels({num2str(min_x,'%.2f'),num2str((max_x+min_x)/2,'%.2f'),...
%                 num2str(max_x,'%.2f')});
%         else
%             xticklabels({'0',num2str((max_x+min_x)/2,'%.2f'),...
%                 num2str(max_x,'%.2f')});
%         end
%         if strcmp(datsetnames{i},'Clavaguera')
%             yticklabels({num2str(min_y,'%.3f'),num2str((max_y+min_y)/2,'%.2f'),...
%                     num2str(max_y,'%.2f')});
%         else
%             if round(min_y,2) ~= 0 
%                 yticklabels({num2str(min_y,'%.2f'),num2str((max_y+min_y)/2,'%.2f'),...
%                     num2str(max_y,'%.2f')});
%             else
%                 yticklabels({'0',num2str((max_y+min_y)/2,'%.2f'),...
%                     num2str(max_y,'%.2f')});
%             end
%         end
%         % ax = gca; ax.YAxis.Exponent = -1; ax.XAxis.Exponent = -1;
%         text(0.05*(max_x-min_x)+min_x, 0.925*(max_y-min_y)+min_y, sprintf('R^2 = %.2f',mdls_corr_topn{i}.Rsquared.Adjusted),...
%             'FontName','Times','FontSize',16);
%         title(datsetlabels{i},'FontSize',20);
%         set(gca,'FontSize',16,'FontName','Times');
%     end
%     han=axes(f,'visible','off'); 
%     han.XLabel.Visible='on';
%     han.YLabel.Visible='on';
%     ylh = ylabel(han,'Observed Pathology at End Time Point','FontSize',20,...
%         'FontName','Times','FontWeight','bold');
%     ylh.Position(1) = ylh.Position(1) - abs(ylh.Position(1) * 0.75);
%     xlh = xlabel(han,'Predicted Pathology at End Time Point','FontSize',20,...
%         'FontName','Times','FontWeight','bold');
%     xlh.Position(2) = xlh.Position(2) - abs(xlh.Position(2) * 0.5);
%     if savenclose
%         cd /Users/justintorok/Documents/MATLAB/Nexis_Project/Figures/;
%         print(sprintf('LinearModelPlots_Yao_Corrs_Top%dTypes',numsigtypes),'-dtiffn','-r300'); close;
% %         print(sprintf('LinearModelPlots_Corrs_Top%dTypes',numsigtypes),'-dtiffn','-r300'); close;
%         cd /Users/justintorok/Documents/MATLAB/Nexis_Project/Nexis/;
%     end
% %     % Partial corr, top N
% %     f = figure('Name','ParCorrTopN','units','inch','position',[0 0 15 7]);
% %     cmap = hsv(length(datsetnames));
% %     for i = 1:length(datsetnames)
% %         subplot(2,4,i); % fix later for not 8 datasets
% %         scatter(Y_preds_parcorr_topn{i},Y_ends{i},50,cmap(i,:),shapes{i},'filled');
% %         h = lsline; set(h,'LineWidth',2,'Color','k','LineStyle','--');
% %         max_x = max(Y_preds_parcorr_topn{i}); max_y = max(Y_ends{i});
% %         min_x = min(Y_preds_parcorr_topn{i}); min_y = min(Y_ends{i});
% %         xlim([min_x max_x]); ylim([min_y max_y*1.05]);
% %         xticks([min_x (max_x+min_x)/2 max_x]); yticks([min_y (max_y+min_y)/2 max_y]);
% %         if round(min_x,2) ~= 0 
% %             xticklabels({num2str(min_x,'%.2f'),num2str((max_x+min_x)/2,'%.2f'),...
% %                 num2str(max_x,'%.2f')});
% %         else
% %             xticklabels({'0',num2str((max_x+min_x)/2,'%.2f'),...
% %                 num2str(max_x,'%.2f')});
% %         end
% %         if strcmp(datsetnames{i},'Clavaguera')
% %             yticklabels({num2str(min_y,'%.3f'),num2str((max_y+min_y)/2,'%.2f'),...
% %                     num2str(max_y,'%.2f')});
% %         else
% %             if round(min_y,2) ~= 0 
% %                 yticklabels({num2str(min_y,'%.2f'),num2str((max_y+min_y)/2,'%.2f'),...
% %                     num2str(max_y,'%.2f')});
% %             else
% %                 yticklabels({'0',num2str((max_y+min_y)/2,'%.2f'),...
% %                     num2str(max_y,'%.2f')});
% %             end
% %         end
% %         % ax = gca; ax.YAxis.Exponent = -1; ax.XAxis.Exponent = -1;
% %         text(0.05*(max_x-min_x)+min_x, 0.925*(max_y-min_y)+min_y, sprintf('R^2 = %.2f',mdls_parcorr_topn{i}.Rsquared.Adjusted),...
% %             'FontName','Times','FontSize',16);
% %         title(datsetlabels{i},'FontSize',20);
% %         set(gca,'FontSize',16,'FontName','Times');
% %     end
% %     han=axes(f,'visible','off'); 
% %     han.XLabel.Visible='on';
% %     han.YLabel.Visible='on';
% %     ylh = ylabel(han,'Observed Pathology at End Time Point','FontSize',20,...
% %         'FontName','Times','FontWeight','bold');
% %     ylh.Position(1) = ylh.Position(1) - abs(ylh.Position(1) * 0.75);
% %     xlh = xlabel(han,'Predicted Pathology at End Time Point','FontSize',20,...
% %         'FontName','Times','FontWeight','bold');
% %     xlh.Position(2) = xlh.Position(2) - abs(xlh.Position(2) * 0.5);
% %     if savenclose
% %         cd /Users/justintorok/Documents/MATLAB/Nexis_Project/Figures/;
% %         print(sprintf('LinearModelPlots_ParCorrs_Top%dTypes',numsigtypes),'-dtiffn','-r300'); close;
% %         cd /Users/justintorok/Documents/MATLAB/Nexis_Project/Nexis/;
% %     end
% % 
%     % Corr, BIC
%     f = figure('Name','CorrBIC','units','inch','position',[0 0 15 7]);
%     cmap = hsv(length(datsetnames));
%     for i = 1:length(datsetnames)
%         subplot(3,4,i+1); % fix later for not 8 datasets
%         scatter(Y_preds_coeff_bic{i},Y_ends{i},50,cmap(i,:),shapes{i},'filled');
%         h = lsline; set(h,'LineWidth',2,'Color','k','LineStyle','--');
%         max_x = max(Y_preds_coeff_bic{i}); max_y = max(Y_ends{i});
%         min_x = min(Y_preds_coeff_bic{i}); min_y = min(Y_ends{i});
%         xlim([min_x max_x]); ylim([min_y max_y*1.05]);
%         xticks([min_x (max_x+min_x)/2 max_x]); yticks([min_y (max_y+min_y)/2 max_y]);
%         if round(min_x,2) ~= 0 
%             xticklabels({num2str(min_x,'%.2f'),num2str((max_x+min_x)/2,'%.2f'),...
%                 num2str(max_x,'%.2f')});
%         else
%             xticklabels({'0',num2str((max_x+min_x)/2,'%.2f'),...
%                 num2str(max_x,'%.2f')});
%         end
%         if strcmp(datsetnames{i},'Clavaguera')
%             yticklabels({num2str(min_y,'%.3f'),num2str((max_y+min_y)/2,'%.2f'),...
%                     num2str(max_y,'%.2f')});
%         else
%             if round(min_y,2) ~= 0 
%                 yticklabels({num2str(min_y,'%.2f'),num2str((max_y+min_y)/2,'%.2f'),...
%                     num2str(max_y,'%.2f')});
%             else
%                 yticklabels({'0',num2str((max_y+min_y)/2,'%.2f'),...
%                     num2str(max_y,'%.2f')});
%             end
%         end
%         % ax = gca; ax.YAxis.Exponent = -1; ax.XAxis.Exponent = -1;
%         text(0.05*(max_x-min_x)+min_x, 0.925*(max_y-min_y)+min_y, sprintf('R^2 = %.2f',mdls_coeff_bic{i}.Rsquared.Adjusted),...
%             'FontName','Times','FontSize',16);
%         title(datsetlabels{i},'FontSize',20);
%         set(gca,'FontSize',16,'FontName','Times');
%     end
%     han=axes(f,'visible','off'); 
%     han.XLabel.Visible='on';
%     han.YLabel.Visible='on';
%     ylh = ylabel(han,'Observed Pathology at End Time Point','FontSize',20,...
%         'FontName','Times','FontWeight','bold');
%     ylh.Position(1) = ylh.Position(1) - abs(ylh.Position(1) * 0.75);
%     xlh = xlabel(han,'Predicted Pathology at End Time Point','FontSize',20,...
%         'FontName','Times','FontWeight','bold');
%     xlh.Position(2) = xlh.Position(2) - abs(xlh.Position(2) * 0.5);
%     if savenclose
%         cd /Users/justintorok/Documents/MATLAB/Nexis_Project/Figures/;
%         print('LinearModelPlots_Coeffs_BIC','-dtiffn','-r300'); close;
%         cd /Users/justintorok/Documents/MATLAB/Nexis_Project/Nexis/;
%     end
% % 
% %     % Partial Corr, BIC
% %     f = figure('Name','ParCorrBIC','units','inch','position',[0 0 15 7]);
% %     cmap = hsv(length(datsetnames));
% %     for i = 1:length(datsetnames)
% %         subplot(2,4,i); % fix later for not 8 datasets
% %         scatter(Y_preds_parcorr_bic{i},Y_ends{i},50,cmap(i,:),shapes{i},'filled');
% %         h = lsline; set(h,'LineWidth',2,'Color','k','LineStyle','--');
% %         max_x = max(Y_preds_parcorr_bic{i}); max_y = max(Y_ends{i});
% %         min_x = min(Y_preds_parcorr_bic{i}); min_y = min(Y_ends{i});
% %         xlim([min_x max_x]); ylim([min_y max_y*1.05]);
% %         xticks([min_x (max_x+min_x)/2 max_x]); yticks([min_y (max_y+min_y)/2 max_y]);
% %         if round(min_x,2) ~= 0 
% %             xticklabels({num2str(min_x,'%.2f'),num2str((max_x+min_x)/2,'%.2f'),...
% %                 num2str(max_x,'%.2f')});
% %         else
% %             xticklabels({'0',num2str((max_x+min_x)/2,'%.2f'),...
% %                 num2str(max_x,'%.2f')});
% %         end
% %         if strcmp(datsetnames{i},'Clavaguera')
% %             yticklabels({num2str(min_y,'%.3f'),num2str((max_y+min_y)/2,'%.2f'),...
% %                     num2str(max_y,'%.2f')});
% %         else
% %             if round(min_y,2) ~= 0 
% %                 yticklabels({num2str(min_y,'%.2f'),num2str((max_y+min_y)/2,'%.2f'),...
% %                     num2str(max_y,'%.2f')});
% %             else
% %                 yticklabels({'0',num2str((max_y+min_y)/2,'%.2f'),...
% %                     num2str(max_y,'%.2f')});
% %             end
% %         end
% %         % ax = gca; ax.YAxis.Exponent = -1; ax.XAxis.Exponent = -1;
% %         text(0.05*(max_x-min_x)+min_x, 0.925*(max_y-min_y)+min_y, sprintf('R^2 = %.2f',mdls_parcorr_bic{i}.Rsquared.Adjusted),...
% %             'FontName','Times','FontSize',16);
% %         title(datsetlabels{i},'FontSize',20);
% %         set(gca,'FontSize',16,'FontName','Times');
% %     end
% %     han=axes(f,'visible','off'); 
% %     han.XLabel.Visible='on';
% %     han.YLabel.Visible='on';
% %     ylh = ylabel(han,'Observed Pathology at End Time Point','FontSize',20,...
% %         'FontName','Times','FontWeight','bold');
% %     ylh.Position(1) = ylh.Position(1) - abs(ylh.Position(1) * 0.75);
% %     xlh = xlabel(han,'Predicted Pathology at End Time Point','FontSize',20,...
% %         'FontName','Times','FontWeight','bold');
% %     xlh.Position(2) = xlh.Position(2) - abs(xlh.Position(2) * 0.5);
% %     if savenclose
% %         cd /Users/justintorok/Documents/MATLAB/Nexis_Project/Figures/;
% %         print('LinearModelPlots_ParCorrs_BIC','-dtiffn','-r300'); close;
% %         cd /Users/justintorok/Documents/MATLAB/Nexis_Project/Nexis/;
% %     end    
% end
% %     [~, modelind_parcorr] = min(bics_parcorr);
% %     parcorrinds_bic = sort(parcorrsortinds(1:modelind_parcorr));
% %     sigtypes_parcorr_bic{i} = parcorrinds_bic;
% %     Xct_norm_parcorr_bic = Xct_norm(:,parcorrinds_bic);
% %     mdls_parcorr_bic{i} = fitlm(Xct_norm_parcorr_bic,Y_end);
% %     Y_preds_parcorr_bic{i} = [ones(length(Y_end),1), Xct_norm_parcorr_bic]...
% %         * mdls_parcorr_bic{i}.Coefficients.Estimate;
% %     subclasses_parcorr_bic{i} = subclasses(parcorrinds_bic);
% end