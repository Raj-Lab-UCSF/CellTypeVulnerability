function KimStudyComparison_Yao_Cross(outstruct,idx,region,classkey,savenclose,loadpath_,figpath_)
if nargin < 7
    figpath_ = [cd filesep 'Figures'];
    if nargin < 6
        loadpath_ = [cd filesep 'MatFiles'];
        if nargin < 5
            savenclose = 0;
            if nargin < 4
                load([loadpath_ filesep 'Tasic_Inputs.mat'],'classkey');
                if nargin < 3
                    region = 'neo';
                end
            end
        end
    end
end
sampleinds = [70,92,186]; % Secondary motor area, primary visual area, dorsal lateral geniculate
switch region
    case 'fore'
        reginds = [1:11,23:56,141:156,170:212];
    case 'hind'
        reginds = [12:22 95:140 157:169];
    case 'neo'
        reginds = 57:94;
%         reginds = [57:65,67,69:94];
    case 'neo+fore'
        reginds = [1:11,23:94,141:156,170:212];
    case 'neo+hipp'
        reginds = [26:36,57:94];
    case 'hipp'
        reginds = 26:36;
    otherwise
        reginds = 1:212;
end
sampleinds = intersect(sampleinds,reginds);
typenames = {'Pvalb','Sst','Vip'};
typecolors = {'g','b','m'};
typesymbol = {'o','s','d'};
kimdata = struct;
testdata = struct;

load([loadpath_ filesep 'kim_density_listB_order.mat'],'kim_dense_reorder');
% load([directory filesep 'Tasic_Inputs.mat'],'classkey');
kim_density_reg = kim_dense_reorder(reginds,:);
kimmaxes = max(kim_density_reg,[],'omitnan');
nonnaninds_reg = zeros(size(kim_density_reg));
for j = 1:size(kim_density_reg,2)
    nonnaninds_reg(:,j) = ~isnan(kim_density_reg(:,j));
end
nonnaninds_reg = logical(nonnaninds_reg);
for j = 1:size(kim_density_reg,2)
    kimdata.region.(typenames{j}) = kim_density_reg(nonnaninds_reg(:,j),j)/kimmaxes(j);
end

kim_density_sample = kim_dense_reorder(sampleinds,:);
nonnaninds_sample = zeros(size(kim_density_sample));
for j = 1:size(kim_density_sample,2)
    nonnaninds_sample(:,j) = logical(~isnan(kim_density_sample(:,j)));
end
nonnaninds_sample = logical(nonnaninds_sample);
for j = 1:size(kim_density_reg,2)
    kimdata.sample.(typenames{j}) = kim_density_sample(nonnaninds_sample(:,j),j)/kimmaxes(j);
end

meancts_wb = (outstruct(idx).Bmeans(1:213,:) + outstruct(idx).Bmeans(214:end,:))/2;
meancts_wb(12,:) = []; % not in ISH parcellation but in CCF
meancts_reg = meancts_wb(reginds,:);
testmaxes = zeros(1,length(typenames));
for j = 1:length(typenames)
    if size(outstruct(idx).Bmeans,2) ~= 25 && strcmp(typenames{j},'Sst') % fix later
        testdensity_1 = meancts_reg(nonnaninds_reg(:,j),ismember(classkey,'Sst Chodl'));
        testdensity_2 = meancts_reg(nonnaninds_reg(:,j),ismember(classkey,'Sst'));
        testdensity = (testdensity_1 + testdensity_2)/2;
    else
        testdensity = meancts_reg(nonnaninds_reg(:,j),ismember(classkey,typenames{j}));
    end
    testmaxes(j) = max(testdensity);
    testdata.region.(typenames{j}) = testdensity/testmaxes(j);
end

meancts_sample = meancts_wb(sampleinds,:);
for j = 1:length(typenames)
    testdensity = meancts_sample(nonnaninds_sample(:,j),ismember(classkey,typenames{j}));
    testdata.sample.(typenames{j}) = testdensity/testmaxes(j);
end

subplotinds = [1,2,3,5,6,9];
figure('Units','inch','Position',[0 0 12.5 16]);
for i = 1:length(typenames)
    for j = 1:length(typenames)
        subplotind = (i-1)*length(typenames) + j;
        if ismember(subplotind,subplotinds)
            subplot(3,3,subplotind); hold on;
            set(gca,'FontSize',12);
            scatter(testdata.region.(typenames{j}),kimdata.region.(typenames{i}),...
                60,[typecolors{j} typesymbol{i}],'filled'); hold on;
            [pearR,pearp] = corr(testdata.region.(typenames{j}),kimdata.region.(typenames{i}));
            [spearR,spearp] = corr(testdata.region.(typenames{j}),kimdata.region.(typenames{i}),'type','Spearman');
            if pearp < 0.001
                txt_R = sprintf('R = %.2f***',pearR);
            elseif pearp < 0.01
                txt_R = sprintf('R = %.2f**',pearR);
            elseif pearp < 0.05
                txt_R = sprintf('R = %.2f*',pearR);
            else
                txt_R = sprintf('R = %.2f',pearR);
            end
            if spearp < 0.001
                txt_rho = sprintf([char(961) ' = %.2f***'],spearR);
            elseif spearp < 0.01
                txt_rho = sprintf([char(961) ' = %.2f**'],spearR);
            elseif spearp < 0.05
                txt_rho = sprintf([char(961) ' = %.2f*'],spearR);
            else
                txt_rho = sprintf([char(961) ' = %.2f'],spearR);
            end
            txt = {txt_R, txt_rho};
            text(0.45*(max(testdata.region.(typenames{j}))-min(testdata.region.(typenames{j})))+min(testdata.region.(typenames{j})),...
                0.15*(max(kimdata.region.(typenames{i}))-min(kimdata.region.(typenames{i})))+min(kimdata.region.(typenames{i})),...
                txt,'FontSize',20,'FontName','Times');
            xticks([]); yticks([]);
            set(gca,'FontSize',20,'FontName','Times');
            p = polyfit(testdata.region.(typenames{j}),kimdata.region.(typenames{i}),1);
            x_maxy = (1 - p(2))/p(1);
            if x_maxy < 1
                plot([0,x_maxy],[p(2),(p(2) + x_maxy*p(1))],'Color',[0.9 0.3 0.1]); hold on;
            else
                plot([0,1],[p(2),(p(2) + p(1))],'Color',[0.9 0.3 0.1]); hold on;
            end
            xlim([min(testdata.region.(typenames{j})) 1]);
            ylim([min(kimdata.region.(typenames{i})) 1]);
            box on
        end
        if ismember(subplotind,[1,5,9])
            ylabel(['Empirical ' typenames{i}],'FontSize',24,'FontWeight','bold');
        end
        if ismember(subplotind,[7,8,9])
            xlabel(['Inferred ' typenames{j}],'FontSize',24,'FontWeight','bold');
        end
    end
end

if savenclose
    print([figpath_ filesep 'yao_kim_study_comparison'],'-dtiffn','-r600');
    close
end
end