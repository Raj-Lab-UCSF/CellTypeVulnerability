function [mdls_bic,subclasses_bic] = LinearModelSelection_BIC_alldatasets(datsetnames_,tpt_,outputs,Xct_,...
    subclasses_,corrtype_,seedcorr_,usebic,datasource,bicplotting,lmplotting,cmap_,savenclose,figdir_,matdir_)

% Select models based on AICc or BIC
if usebic
    crit_calc = @(x,y,z) -2*x + (y * log(z));
else % AICc
    crit_calc = @(x,y,z) -2*x + 2*y + (2*(y^2 + y))/(z - y - 1);
end

% Pre-filtering cell types based on significant correlations
[critmat,logpmat] = CorrelationCalculator_singletimepoint(datsetnames_,tpt_,outputs,...
                            Xct_,corrtype_,seedcorr_,matdir_);
sigtypes_corrp05 = cell(1,length(datsetnames_)); 
sigthreshp05 = -log10(0.05);
prctthresh = prctile(logpmat,75,2);
for i = 1:length(datsetnames_)
    siginds = logpmat(i,:) > sigthreshp05;
    quartinds = logpmat(i,:) > prctthresh(i);
    sigtypes_corrp05{i} = find((siginds + quartinds) == 2);
end

% Finding BIC model and plotting
Y_ts = cell(1,length(datsetnames_));
sigtypes_bic = cell(1,length(datsetnames_));
mdls_bic = cell(1,length(datsetnames_));
Y_preds_bic = mdls_bic;
subclasses_bic = mdls_bic;
pvals_bic = zeros(1,length(datsetnames_));

if bicplotting
    datsetlabels = cellfun(@(x) strrep(x,'_',' '), datsetnames_,'UniformOutput',0);
    if isempty(cmap_)
        cmap = hsv(length(datsetnames_));
    else
        cmap = cmap_;
    end
    shapes = {'o','s','d','^','v','<','>','p','h','+','.','x'};
    if length(datsetnames_) == 9
        f1 = figure('Units','inches','Position',[0,0,15,10]);
    elseif length(datsetnames_) == 10
        f1 = figure('Units','inches','Position',[0,0,20,8]);
    else
        f1 = figure('Units','inches','Position',[0,0,20,15]);
    end
    sgtitle('BIC Plots','FontName','Times','FontSize',24);
    set(gca,'FontName','Times','FontSize',16);
end

for i = 1:length(datsetnames_)
    % Threshold by coefficient value from bootstrapped OLS, use only
    % significant values for BIC model selection
    datsetname = datsetnames_{i};
    sigtypeinds_i = sigtypes_corrp05{i};
    subclasses_i = subclasses_(sigtypeinds_i);
    datamat_i = critmat(i,sigtypeinds_i);
    [~,sortinds_i] = sort(abs(datamat_i),'descend');
    subclasses_i_sort = subclasses_i(sortinds_i);
    Y = outputs.(datsetname).data;
    if logical(seedcorr_) && (sum(outputs.(datsetname).seed)>0)
        Y = SeedCorrection(Y,outputs.(datsetname).seed);
    end
    if tpt_ == 3 && strcmp(datsetname,'Hurtado') % Only look at first, second, and last time points for Hurtado
        Y_t = Y(:,tpt_+1);
    else
        Y_t = Y(:,tpt_);
    end
    Y_ts{i} = Y_t;
    Xct_i = CCFToData(Xct_,datsetname,matdir_);    
    Xct_maxes = repmat(max(Xct_i),size(Xct_i,1),1);
    Xct_i = Xct_i./Xct_maxes;
    bics = zeros(1,length(sigtypeinds_i));
    
    for j = 1:length(sigtypeinds_i)
        subclasses_ij = subclasses_i_sort(1:j); 
        Xct_ij= Xct_i(:,ismember(subclasses_,subclasses_ij));
        mdls_coeff_j = fitlm(Xct_ij,Y_t);
        bics(j) = crit_calc(mdls_coeff_j.LogLikelihood,(j+1),length(Y_t));
    end

    [~, modelind] = min(bics);
    subclasses_bic{i} = sort(subclasses_i_sort(1:modelind));
    sigtypes_bic{i} = find(ismember(subclasses_,subclasses_bic{i}));
    Xct_bic = Xct_i(:,sigtypes_bic{i});
    mdls_bic{i} = fitlm(Xct_bic,Y_t);
    Y_preds_bic{i} = [ones(length(Y_t),1), Xct_bic]...
        * mdls_bic{i}.Coefficients.Estimate;
    pvals_bic(i) = coefTest(mdls_bic{i});
    if bicplotting
        figure(f1)
        if length(datsetnames_) == 9
            subplot(3,3,i); hold on;
        elseif length(datsetnames_) == 10
            subplot(2,5,i); hold on;
        else
            subplot(3,4,i); hold on;
        end
        if i < 10
            scatter(1:length(sigtypeinds_i),bics,75,cmap(i,:),shapes{i},'filled'); 
        else
            scatter(1:length(sigtypeinds_i),bics,75,cmap(i,:),shapes{i}); 
        end
        max_x = length(sigtypeinds_i); max_y = max(bics);
        min_x = 0; min_y = min(bics);
        xlim([min_x max_x]); ylim([min_y max_y]);
        xticks([1 length(sigtypeinds_i)]); yticks([min_y,max_y]);
        ytickformat('%.2d')
        plot([modelind modelind],[min_y max_y],'LineWidth',2,'Color','k'); 
        if length(datsetnames_) == 9
            if ismember(i,7:9)
                xlabel('n');
            end
            if ismember(i,[1,4,7])
                ylabel('BIC');
            end
        elseif length(datsetnames_) == 10
            if ismember(i,6:10)
                xlabel('n');
            end
            if ismember(i,[1,6])
                ylabel('BIC');
            end
        else
            % Placeholder
        end
        title(datsetlabels{i});
        if i == 2
            text(0.5*(max_x-min_x)+min_x, 0.875*(max_y-min_y)+min_y,...
                sprintf('n_B_I_C = %d',length(subclasses_bic{i})),'FontName','Times','FontSize',20);
        else
            text(0.65*(max_x-min_x)+min_x, 0.875*(max_y-min_y)+min_y,...
                sprintf('n_B_I_C = %d',length(subclasses_bic{i})),'FontName','Times','FontSize',20);
        end
        set(gca,'FontSize',24,'FontName','Times','box','on');
    end
end
if bicplotting
    if savenclose
        print([figdir_ filesep 'BIC_Plots_' datasource '_t' num2str(tpt_)],'-dtiffn','-r600'); close;
    end
end

if lmplotting
    if length(datsetnames_) == 9
        f = figure('Units','inches','Position',[0,0,11,10]);
    elseif length(datsetnames_) == 10
        f = figure('Units','inches','Position',[0,0,20,8]);
    else
        f = figure('Units','inches','Position',[0,0,20,15]);
    end
    datsetlabels = cellfun(@(x) strrep(x,'_',' '), datsetnames_,'UniformOutput',0);
    if isempty(cmap_)
        cmap = hsv(length(datsetnames_));
    else
        cmap = cmap_;
    end
    shapes = {'o','s','d','^','v','<','>','p','h','+','.','x'};
    for i = 1:length(datsetnames_)
        if length(datsetnames_) == 9
            subplot(3,3,i); hold on;
        elseif length(datsetnames_) == 10
            subplot(2,5,i); hold on;
        else
            subplot(3,4,i); hold on;
        end
        if i < 10
            scatter(Y_preds_bic{i},Y_ts{i},75,cmap(i,:),shapes{i},'filled');
        else
            scatter(Y_preds_bic{i},Y_ts{i},75,cmap(i,:),shapes{i});
        end
        h = lsline; set(h,'LineWidth',2,'Color','k','LineStyle','--');
        max_x = max(Y_preds_bic{i}); max_y = max(Y_ts{i});
        min_x = min(Y_preds_bic{i}); min_y = min(Y_ts{i});
        xlim([min_x max_x]); ylim([min_y max_y*1.05]);
        xticks([min_x (max_x+min_x)/2 max_x]); yticks([min_y (max_y+min_y)/2 max_y]);
        if round(min_x,2) ~= 0 
            xticklabels({num2str(min_x,'%.2f'),num2str((max_x+min_x)/2,'%.2f'),...
                num2str(max_x,'%.2f')});
        else
            xticklabels({'0',num2str((max_x+min_x)/2,'%.2f'),...
                num2str(max_x,'%.2f')});
        end
        if strcmp(datsetnames_{i},'Clavaguera')
            yticklabels({num2str(min_y,'%.3f'),num2str((max_y+min_y)/2,'%.2f'),...
                    num2str(max_y,'%.2f')});
        else
            if round(min_y,2) ~= 0 
                yticklabels({num2str(min_y,'%.2f'),num2str((max_y+min_y)/2,'%.2f'),...
                    num2str(max_y,'%.2f')});
            else
                yticklabels({'0',num2str((max_y+min_y)/2,'%.2f'),...
                    num2str(max_y,'%.2f')});
            end
        end

        pstr = '';
        if pvals_bic(i) < 0.01/length(datsetnames_) % Bonferroni
            pstr = [pstr '^*'];
            if pvals_bic(i) < 0.001/length(datsetnames_)
                pstr = [pstr '^*'];
                if pvals_bic(i) < 0.0001/length(datsetnames_)
                    pstr = [pstr '^*'];
                end
            end
        end
        % ax = gca; ax.YAxis.Exponent = -1; ax.XAxis.Exponent = -1;
        text(0.05*(max_x-min_x)+min_x, 0.85*(max_y-min_y)+min_y,...
            {sprintf('R^2 = %.2f%s',mdls_bic{i}.Rsquared.Adjusted,pstr),...
            sprintf('n = %d',length(subclasses_bic{i}))},'FontName','Times','FontSize',18);
        title(datsetlabels{i},'FontSize',24);
        set(gca,'FontSize',20,'FontName','Times','box','on');
    end
    han=axes(f,'visible','off'); 
    han.XLabel.Visible='on';
    han.YLabel.Visible='on';
    ylh = ylabel(han,'Observed Pathology at End Time Point','FontSize',24,...
        'FontName','Times','FontWeight','bold');
    ylh.Position(1) = ylh.Position(1) - abs(ylh.Position(1) * 1.25);
    xlh = xlabel(han,'Predicted Pathology at End Time Point','FontSize',24,...
        'FontName','Times','FontWeight','bold');
    xlh.Position(2) = xlh.Position(2) - abs(xlh.Position(2) * 0.75);
    if savenclose
        print([figdir_ filesep 'LinearModelPlots_Coeffs_BIC_' datasource '_t' num2str(tpt_)],'-dtiffn','-r600'); close;
    end
end
end