function GeneOverlapPlot(degenestruct,niter,savenclose,figdir_)
if nargin < 4
    figdir_ = cd;
    if nargin < 3
        savenclose = 0;
        if nargin < 2
            niter = 10000;
        end
    end
end

rng(0)
vulngenes = degenestruct.VulnerableGenes;
ctvulngenes = degenestruct.VulnerableCTGenes;
resgenes = degenestruct.ResilienceGenes;
ctresgenes = degenestruct.ResilienceCTGenes;
vulnintersect = degenestruct.VulnerableIntersect;
resintersect = degenestruct.ResilienceIntersect;

n_vuln = length(vulngenes); n_ctvuln = length(ctvulngenes);
n_res = length(resgenes); n_ctres = length(ctresgenes);
n_tot = 3763; % hard-coded because overall size of dataset is constant
n_vulnint_true = length(vulnintersect); n_resint_true = length(resintersect);
dist_vuln_null = NaN(1,niter); dist_res_null = dist_vuln_null;
for i = 1:niter
    vulninds = randperm(n_tot); ctvulninds = randperm(n_tot);
    vulninds = vulninds(1:n_vuln); ctvulninds = ctvulninds(1:n_ctvuln);
    dist_vuln_null(i) = length(intersect(vulninds,ctvulninds));
    resinds = randperm(n_tot); ctresinds = randperm(n_tot);
    resinds = resinds(1:n_res); ctresinds = ctresinds(1:n_ctres);
    dist_res_null(i) = length(intersect(resinds,ctresinds));
end

figure('Units','inches','Position',[0 0 10 9]); hold on;
% violin({dist_vuln_null.',dist_res_null.'},'medc',[]);
b = boxplot([dist_vuln_null.',dist_res_null.'],'Colors',[[0.25 0.25 0.25];[0.25 0.25 0.25]],'Symbol','');
set(b,{'linew'},{2});
cmap_fill = [[0 0 1];[1 0 0]];
h = findobj(gca,'Tag','Box');
for j=1:length(h)
    patch(get(h(j),'XData'),get(h(j),'YData'),cmap_fill(j,:),'FaceAlpha',0.5);
end
plot([0.8,1.2],[n_vulnint_true,n_vulnint_true],'LineStyle',':','Color',[1 0 0],'LineWidth',3);
plot([1.8,2.2],[n_resint_true,n_resint_true],'LineStyle',':','Color',[0 0 1],'LineWidth',3);
set(gca,'XTick',1:2,'XTickLabel',{'Vulnerable','Resilience'});
ylabel('Number of Overlapping Genes');
xlim([0.5,2.5])
ymax = round(0.85*max(dist_vuln_null));
ylim([-2,ymax+2]); yticks([0,round((ymax)/2),ymax]);
legend({'Null Distribution, Vulnerable', 'Null Distribution, Resilience',...
    sprintf('True Overlap, Vulnerable = %d',n_vulnint_true),...
    sprintf('True Overlap, Resilience = %d',n_resint_true)},'Location','northeast');
set(gca,'FontSize',28,'FontName','Times')
figstr = [figdir_ filesep sprintf('GeneOverlapPlot_thresh%d',degenestruct.threshold)];
if savenclose
    print(figstr,'-dtiffn','-r600'); close;
end


% plot([0.5,length(classes)+0.5],[0,0],'LineStyle','--','Color',[0.25 0.25 0.25],'LineWidth',1.5);
% xlim([0.5,length(classes)+0.5])
% ylim([-1,1.35])
% ax = gca;
% for i = 1:length(classlabels)
%     text(i, ax.YLim(1), sprintf('%s\n%s\n%s', classlabels{:,i}), ...
%         'horizontalalignment', 'center', 'verticalalignment', 'top', 'FontName',...
%         'Times','FontSize',26,'Color',cmap_(i,:));    
% end
% set(gca,'XTick',1:length(classes),'XTickLabel',{'Vulnerable','Resilience'});  
% % set(gca,'YTick',[-1 -0.5 0 0.5 1])
% hLegend = findobj(gcf, 'Type', 'Legend');
% hLegend.String = {'Class Mean'}; hLegend.FontSize = 22; hLegend.Box = 'on';
% if strcmp(type,'Pearson')
%     ylabel("Pearson's R");
%     figstr = [figdir_ filesep 'CorrClassViolin_'];
% elseif strcmp(type,'Partial')
%     ylabel("Partial Correlation \rho");
%     figstr = [figdir_ filesep 'ParcorrClassViolin_'];
% end
% if length(subclasses_) == 25
%     figstr = [figstr 'Tasic'];
% elseif length(subclasses_) == 42
%     figstr = [figstr 'Yao'];
% end
% xlabel('');
% set(gca,'TickLength',[0 0])
% set(gca, 'FontSize', 26, 'FontName', 'Times');


end