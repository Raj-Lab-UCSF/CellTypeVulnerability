function de_genes = DifferentialGeneExpressionIdentifier_CTs(genemat_,genenames_,thresh_,cts_,subclasses_,ngenes_)
ctmean = mean(genemat_,1);
ctmean = repmat(ctmean,size(genemat_,1),1);
ctnorm = genemat_ ./ ctmean;
% ctnorm(ctnorm<(0.1*std(nonzeros(ctnorm)))) = 0; % filter out excessively small signal
C_cellnorm = ctnorm;
zeroinds = false(1,size(C_cellnorm,1));
for i = 1:length(zeroinds)
    zeroinds(i) = all(C_cellnorm(i,:) == 0);
end
C_cellnorm(zeroinds,:) = [];
genenames_(zeroinds) = [];

% Fcalc = @(g) sum((g - mean(g)).^2)/(length(g) - 1);
% Fvec = zeros(1,size(C_cellnorm,1));
% for i = 1:length(Fvec)
%     g_ct = C_cellnorm(i,:);
%     Fvec(i) = Fcalc(g_ct);
% end
% [~,sortinds] = sort(Fvec,'descend');
% C_sort = C_cellnorm(sortinds,:);
% gns_sort = genenames_(sortinds);
% n_lowde = round(thresh_*size(C_cellnorm,1)/100);
% n_highde = size(C_cellnorm,1) - n_lowde;
% C_highde = C_sort;
% gns_highde = gns_sort;

% C_mean = mean(C_cellnorm,2);
% C_std = std(C_cellnorm,[],2);
% zscore_mat = (C_cellnorm - repmat(C_mean,1,size(C_cellnorm,2)))./repmat(C_std,1,size(C_cellnorm,2));
threshval = median(nonzeros(C_cellnorm(:))) * thresh_;

de_genes = cell(2,length(cts_));
de_genes(1,:) = subclasses_(ismember(subclasses_,cts_));
for i = 1:length(cts_)
    ind = ismember(subclasses_,cts_{i});
    g_i = C_cellnorm(:,ind);
    C_cellnorm_i = C_cellnorm;
    C_cellnorm_i(g_i < threshval,:) = [];
    genenames_i = genenames_;
    genenames_i(g_i < threshval) = [];
    C_mean = mean(C_cellnorm_i,2);
    C_std = std(C_cellnorm_i,[],2);
    zscore_mat = (C_cellnorm_i - repmat(C_mean,1,size(C_cellnorm_i,2)))./repmat(C_std,1,size(C_cellnorm_i,2));
    zscore_i = zscore_mat(:,ind);
    [~,sortinds_i] = sort(zscore_i,'descend');
    de_genes{2,i} = genenames_i(sortinds_i(1:ngenes_));
end
% for i = 1:length(cts_)
%     Rvals_i = zeros(1,length(gns_highde));
%     for j = 1:length(Rvals_i)
%         Rvals_i(j) = corr(ismember(subclasses_,cts_{i}),C_highde(j,:).');
%         if isnan(Rvals_i(j))
%             Rvals_i(j) = -Inf;
%         end
%     end
%     [~,sortinds_i] = sort(Rvals_i,'descend');
% %     C_highde_i = C_highde(:,i);
% %     [~,sortinds_i] = sort(C_highde_i,'descend');
%     de_genes{2,i} = gns_highde(sortinds_i(1:ngenes_));
% end

end