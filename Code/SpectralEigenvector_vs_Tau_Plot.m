function SpectralEigenvector_vs_Tau_Plot(genemat_,ctmat_,mattype_,v2orv3,...
    subclasses_,neurononly_,corrmat_,corrtype_,cmap_,usewls_,savenclose,figdir_)

switch mattype_
    case 'AllGenes'
        datamat = genemat_;
        figstr = 'AllGenes_';
    case 'MRx3'
        datamat = genemat_;
        figstr = 'MRx3_';
    case 'Spatial'
        datamat = ctmat_;
        figstr = 'Spatial_';
end

if length(subclasses_) == 25
    % Will finish for Tasic at a later time
    figstr = [figstr 'Tasic_'];
elseif length(subclasses_) == 42
    figstr = [figstr 'Yao_'];
    nonneuronal_inds = find(ismember(subclasses_,{'Endo','Astro','Oligo',...
        'Micro-PVM','SMC-Peri','VLMC'}));
    gaba_inds = find(ismember(subclasses_,{'Lamp5','Sncg','Meis2','CR',...
        'Pvalb','Sst','Sst Chodl','Vip'}));
    glutctx_other_inds = find(ismember(subclasses_,{'Car3','L4 RSP-ACA'}));
    ctxtest = @(x) strcmp(x(end),'X');
    glutctx_inds = find(logical(cell2mat(cellfun(ctxtest,subclasses_,'UniformOutput',false))));
    glutctx_inds = sort([glutctx_other_inds; glutctx_inds]);
    gluthipp_inds = setdiff((1:length(subclasses_)).',[nonneuronal_inds;gaba_inds;glutctx_inds]);
    indcell = {glutctx_inds,gluthipp_inds,gaba_inds,nonneuronal_inds};
    if strcmp(cmap_,'cool')
        cmap_labs = cool(length(indcell));
    elseif strcmp(cmap_,'hsv')
        cmap_labs = hsv(length(indcell));
    elseif strcmp(cmap_,'lines')
        cmap_labs = lines(length(indcell));
    else
        cmap_labs = twocolor(cmap_(1,:),cmap_(2,:),length(indcell));
    end
else
    if strcmp(cmap_,'cool')
        cmap_labs = cool(length(subclasses_));
    elseif strcmp(cmap_,'hsv')
        cmap_labs = hsv(length(subclasses_));
    elseif strcmp(cmap_,'lines')
        cmap_labs = lines(length(subclasses_));
    else
        cmap_labs = twocolor(cmap_(1,:),cmap_(2,:),length(subclasses_));
    end
    indcell = cell(1,length(subclasses_));
    for i = 1:length(indcell)   
        indcell{i} = i;
    end
end

groupids = zeros(length(subclasses_),1);
for i = 1:length(groupids)
    id_i = zeros(1,length(indcell));
    for j = 1:length(indcell)
        id_i(j) = ismember(i,indcell{j});
    end
    groupids(i) = find(id_i);
end

if usewls_
    figstr = [figstr 'WLS'];
else
    figstr = [figstr 'OLS'];
end

if neurononly_
    figstr = [figstr 'NeuronalOnly_'];
    corrmat_(:,nonneuronal_inds) = [];
    groupids(nonneuronal_inds) = [];
    cmap_labs(end,:) = [];
    datamat(:,nonneuronal_inds) = [];
end

datamat = datamat / max(datamat(:));
D_ = squareform(pdist(datamat.','correlation'));
S_ = 1./D_;
S_(logical(eye(size(S_)))) = 0;
S_ = (S_ - min(S_(:)))/(max(S_(:))-min(S_(:)));

L_ = eye(size(S_)) - diag(sum(S_).^(-1))*S_;
[V_,~] = eig(L_);
V2 = V_(:,2); V3 = V_(:,3);
if ~strcmp(mattype_,'Spatial')
    V2 = -V2; V3 = -V3; 
end

corrtau = mean(corrmat_);
corrtau_std = std(corrmat_);
if usewls_
    weights = (corrtau_std.^(-1)).';
else
    weights = ones(length(corrtau_std),1);
end
if v2orv3
    figstr = [figstr '_V2'];
    eigenvec = V2;
else
    figstr = [figstr '_V3'];
    eigenvec = V3;
end
lm = fitlm(eigenvec,corrtau.','Weights',weights);  
x_lm = linspace(min(eigenvec),max(eigenvec),100).'; 
[y_lm, y_ci] = predict(lm, x_lm);

figure('Units','inches','Position',[0 0 9 9]); hold on;
errorbar(eigenvec,corrtau.',corrtau_std,'LineStyle','none','Color',[0 0 0],'MarkerSize',0.1);
plot(x_lm,y_ci(:,1),'k:'); plot(x_lm,y_ci(:,2),'k:'); 
fill([x_lm; flipud(x_lm)],[y_ci(:,1); flipud(y_ci(:,2))],[1 0 0.25],'EdgeColor','none','FaceAlpha',0.15);
g = gscatter(eigenvec,corrtau.',groupids,cmap_labs,'o',10,'off');
for i = 1:length(g)
    set(g(i),'MarkerFaceColor',cmap_labs(i,:));
end
h = plot(x_lm,y_lm,'k','LineWidth',2);
plot(x_lm,zeros(1,length(x_lm)),'Color',[0.25 0.25 0.25],'LineStyle','--');

xmax = max(eigenvec); xmin = min(eigenvec);
xlim([xmin,xmax]); xticks([xmin,(xmax+xmin)/2,xmax]);
xticklabels({num2str(xmin,'%.2f'),num2str((xmin+xmax)/2,'%.2f'),num2str(xmax,'%.2f')});
% if usewls_
ymin = min(corrtau - corrtau_std); ymax = max(corrtau + corrtau_std);
ytickmin = min(corrtau); ytickmax = max(corrtau);
% else
%     ymin = min(corrtau); ymax = max(corrtau);
%     ytickmin = ymin; ytickmax = ymax;
% end
ylim(1.05*[ymin,ymax]);
yticks([ytickmin,0,ytickmax]);
yticklabels({num2str(ytickmin,'%.2f'),'0',num2str(ytickmax,'%.2f')});

if neurononly_
    leg = legend([g; h],{'Cort. Glut.',...
            'Hipp. Glut.',...
            'GABAergic',...
            sprintf(['R^2 = %.2f,' newline 'p = %.1d'],...
            lm.Rsquared.Adjusted,lm.ModelFitVsNullModel.Pvalue)},...
            'Location','none','box','off','NumColumns',5);
    set(leg,'units','normalized','position',[0.64,0.72,0.3,0.2],'color','none');
else
    if v2orv3
        if strcmp('MRx3',mattype_)
            leg = legend(g,{'Cort. Glut.',...
                    'Hipp. Glut.',...
                    'GABAergic',...
                    'Non-Neuronal'},...
                    'Location','none','box','off','NumColumns',1);
%             if ~v2orv3
%                 set(leg,'units','normalized','position',[0.175,0.125,0.2,0.15],'color','none');
%             else
            set(leg,'units','normalized','position',[0.65,0.125,0.2,0.15],...
                'color','none','fontsize',24);
%             end
        end
    end
    text(0.025*(xmax-xmin)+xmin, 0.95*(ymax-ymin)+ymin,...
        {sprintf('R^2 = %.2f',lm.Rsquared.Adjusted),...
        sprintf('p = %.1d',lm.ModelFitVsNullModel.Pvalue)},... % Bonferroni MHC
        'FontName','Times','FontSize',24);
end         

if strcmp(mattype_,'Spatial')
    if v2orv3
        xlabel('$v_{2}, L_{spatial}$','Interpreter','latex'); 
    else
        xlabel('$v_{3}, L_{spatial}$','Interpreter','latex'); 
    end
else
    if v2orv3
        xlabel('$v_{2}, L_{gene}$','Interpreter','latex'); 
    else
        xlabel('$v_{3}, L_{gene}$','Interpreter','latex'); 
    end
end

if strcmp(corrtype_,'Pearson')
    ylabel("Mean Pearson's R, Tau Pathology");
elseif strcmp(corrtype_,'Partial')
    ylabel("Mean Partial Correlation \rho, Tau Pathology");
end
set(gca,'FontName','Times','FontSize',26,'box','on');

if savenclose
    print([figdir_ filesep figstr],'-dtiffn','-r600'); close;
end

end