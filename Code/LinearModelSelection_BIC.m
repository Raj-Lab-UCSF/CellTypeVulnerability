function [mdls_bic,subclasses_bic] = LinearModelSelection_BIC(datsetnames_,outputs,Xct_,...
    sigtypeinds_,subclasses_,critmat,usebic,datasource,bicplotting,lmplotting,savenclose,figdir_)

Y_ends = cell(1,length(datsetnames_));
sigtypes_bic = cell(1,length(datsetnames_));
mdls_bic = cell(1,length(datsetnames_));
Y_preds_bic = mdls_bic;
subclasses_bic = mdls_bic;
% Select models based on AIC or BIC
if usebic
    crit_calc = @(x,y,z) -2*x + (y * log(z));
else
    crit_calc = @(x,y,z) -2*x + 2*y;
end

if bicplotting
    datsetlabels = cellfun(@(x) strrep(x,'_',' '), datsetnames_,'UniformOutput',0);
    cmap = hsv(length(datsetnames_));
    shapes = {'o','s','d','^','v','<','>','p','h','+','.','x'};
    if length(datsetnames_) == 9
        f1 = figure('Units','inches','Position',[0,0,15,10]);
    elseif length(datsetnames_) == 10
        f1 = figure('Units','inches','Position',[0,0,20,8]);
    else
        f1 = figure('Units','inches','Position',[0,0,20,15]);
    end
    sgtitle('BIC Plots','FontName','Times','FontSize',24);
    set(gca,'FontName','Times','FontSize',16);
end

for i = 1:length(datsetnames_)
    % Threshold by coefficient value from bootstrapped OLS, use only
    % significant values for BIC model selection
    datsetname = datsetnames_{i};
    sigtypeinds_i = sigtypeinds_{i};
    subclasses_i = subclasses_(sigtypeinds_i);
    datamat_i = critmat(i,sigtypeinds_i);
    [~,sortinds_i] = sort(abs(datamat_i),'descend');
    subclasses_i_sort = subclasses_i(sortinds_i);
    Y = outputs.(datsetname).data;
    naninds = isnan(Y(:,1));
    Y_end = Y(~naninds,end);
    Y_ends{i} = Y_end;
    Xct_i = Xct_(~naninds,:);    
    Xct_maxes = repmat(max(Xct_i),size(Xct_i,1),1);
    Xct_i = Xct_i./Xct_maxes;
    bics = zeros(1,length(sigtypeinds_i));
    
    for j = 1:length(sigtypeinds_i)
        subclasses_ij = subclasses_i_sort(1:j); 
        Xct_ij= Xct_i(:,ismember(subclasses_,subclasses_ij));
        mdls_coeff_j = fitlm(Xct_ij,Y_end);
        bics(j) = crit_calc(mdls_coeff_j.LogLikelihood,(j+1),length(Y_end));
    end

    [~, modelind] = min(bics);
    subclasses_bic{i} = sort(subclasses_i_sort(1:modelind));
    sigtypes_bic{i} = find(ismember(subclasses_,subclasses_bic{i}));
    Xct_bic = Xct_i(:,sigtypes_bic{i});
    mdls_bic{i} = fitlm(Xct_bic,Y_end);
    Y_preds_bic{i} = [ones(length(Y_end),1), Xct_bic]...
        * mdls_bic{i}.Coefficients.Estimate;

    if bicplotting
        figure(f1)
        if length(datsetnames_) == 9
            subplot(3,3,i); hold on;
        elseif length(datsetnames_) == 10
            subplot(2,5,i); hold on;
        else
            subplot(3,4,i); hold on;
        end
        scatter(1:length(sigtypeinds_i),bics,50,cmap(i,:),shapes{i}); 
        max_x = length(sigtypeinds_i); max_y = max(bics);
        min_x = 0; min_y = min(bics);
        xlim([min_x max_x]); ylim([min_y max_y]); 
        xticks([1 length(sigtypeinds_i)]); yticks([min_y,max_y]);
        ytickformat('%.2d')
        plot([modelind modelind],[min_y max_y],'LineWidth',2,'Color','k');
        title(datsetlabels{i}); xlabel('n'); ylabel('BIC');
        text(0.7*(max_x-min_x)+min_x, 0.875*(max_y-min_y)+min_y,...
            sprintf('n_B_I_C = %d',length(subclasses_bic{i})),'FontName','Times','FontSize',16);
        set(gca,'FontSize',16,'FontName','Times');
    end
end
if bicplotting
    if savenclose
        print([figdir_ filesep 'BIC_Plots_' datasource],'-dtiffn','-r600'); close;
    end
end

if lmplotting
    if length(datsetnames_) == 9
        f = figure('Units','inches','Position',[0,0,15,10]);
    elseif length(datsetnames_) == 10
        f = figure('Units','inches','Position',[0,0,20,8]);
    else
        f = figure('Units','inches','Position',[0,0,20,15]);
    end
    datsetlabels = cellfun(@(x) strrep(x,'_',' '), datsetnames_,'UniformOutput',0);
    cmap = hsv(length(datsetnames_));
    shapes = {'o','s','d','^','v','<','>','p','h','+','.','x'};
    for i = 1:length(datsetnames_)
        if length(datsetnames_) == 9
            subplot(3,3,i); hold on;
        elseif length(datsetnames_) == 10
            subplot(2,5,i); hold on;
        else
            subplot(3,4,i); hold on;
        end
        scatter(Y_preds_bic{i},Y_ends{i},50,cmap(i,:),shapes{i});
        h = lsline; set(h,'LineWidth',2,'Color','k','LineStyle','--');
        max_x = max(Y_preds_bic{i}); max_y = max(Y_ends{i});
        min_x = min(Y_preds_bic{i}); min_y = min(Y_ends{i});
        xlim([min_x max_x]); ylim([min_y max_y*1.05]);
        xticks([min_x (max_x+min_x)/2 max_x]); yticks([min_y (max_y+min_y)/2 max_y]);
        if round(min_x,2) ~= 0 
            xticklabels({num2str(min_x,'%.2f'),num2str((max_x+min_x)/2,'%.2f'),...
                num2str(max_x,'%.2f')});
        else
            xticklabels({'0',num2str((max_x+min_x)/2,'%.2f'),...
                num2str(max_x,'%.2f')});
        end
        if strcmp(datsetnames_{i},'Clavaguera')
            yticklabels({num2str(min_y,'%.3f'),num2str((max_y+min_y)/2,'%.2f'),...
                    num2str(max_y,'%.2f')});
        else
            if round(min_y,2) ~= 0 
                yticklabels({num2str(min_y,'%.2f'),num2str((max_y+min_y)/2,'%.2f'),...
                    num2str(max_y,'%.2f')});
            else
                yticklabels({'0',num2str((max_y+min_y)/2,'%.2f'),...
                    num2str(max_y,'%.2f')});
            end
        end
        % ax = gca; ax.YAxis.Exponent = -1; ax.XAxis.Exponent = -1;
        text(0.05*(max_x-min_x)+min_x, 0.875*(max_y-min_y)+min_y, {sprintf('R^2 = %.2f',mdls_bic{i}.Rsquared.Adjusted),...
            sprintf('n = %d',length(subclasses_bic{i}))},'FontName','Times','FontSize',16);
        title(datsetlabels{i},'FontSize',20);
        set(gca,'FontSize',16,'FontName','Times');
    end
    han=axes(f,'visible','off'); 
    han.XLabel.Visible='on';
    han.YLabel.Visible='on';
    ylh = ylabel(han,'Observed Pathology at End Time Point','FontSize',20,...
        'FontName','Times','FontWeight','bold');
    ylh.Position(1) = ylh.Position(1) - abs(ylh.Position(1) * 0.75);
    xlh = xlabel(han,'Predicted Pathology at End Time Point','FontSize',20,...
        'FontName','Times','FontWeight','bold');
    xlh.Position(2) = xlh.Position(2) - abs(xlh.Position(2) * 0.5);
    if savenclose
        print([figdir_ filesep 'LinearModelPlots_Coeffs_BIC_' datasource],'-dtiffn','-r600'); close;
    end
end
end