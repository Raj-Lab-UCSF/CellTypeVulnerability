function [mdls_topN,subclasses_topN,coefvals_topN,pvals_topN_vars] = ...
    LinearModelSelection_TopN_alldatasets(datsetnames_,tpt_,...
    outputs,Xct_,subclasses_,numsigtypes_,corrtype_,seedcorr_,...
    datasource,lmplotting,cmap_,savenclose,figdir_,matdir_)

[critmat,~] = CorrelationCalculator_singletimepoint(datsetnames_,tpt_,outputs,...
                            Xct_,corrtype_,seedcorr_,matdir_);
Y_ts = cell(1,length(datsetnames_));
sigtypes_topN = cell(1,length(datsetnames_));
mdls_topN = cell(1,length(datsetnames_));
Y_preds_topN = mdls_topN;
subclasses_topN = mdls_topN;
pvals_topN = zeros(1,length(datsetnames_));
coefvals_topN = zeros(length(subclasses_),length(datsetnames_));
pvals_topN_vars = ones(length(subclasses_),length(datsetnames_));

for i = 1:length(datsetnames_)
    % Establish top N types by corr.
    [~,corrsortinds] = sort(abs(critmat(i,:)),'descend');
    corrinds_topN = sort(corrsortinds(1:numsigtypes_));

    % Fit models for top N types
    datsetname = datsetnames_{i};
    Y = outputs.(datsetname).data;
    if strcmp(tpt_,'end')
        t_ = length(outputs.(datsetname).time_stamps);
    else
        t_ = tpt_;
    end
    if logical(seedcorr_) && (sum(outputs.(datsetname).seed)>0)
        Y = SeedCorrection(Y,outputs.(datsetname).seed);
    end
    Y_t = Y(:,t_);
    Y_ts{i} = Y_t;
    Xct_i = CCFToData(Xct_,datsetname,matdir_);  
    Xct_maxes = repmat(max(Xct_i),size(Xct_i,1),1);
    Xct_i = Xct_i./Xct_maxes;
    Xct_topN = Xct_i(:,corrinds_topN);
    mdls_topN{i} = fitlm(Xct_topN,Y_t);
    Y_preds_topN{i} = [ones(length(Y_t),1), Xct_topN]...
        * mdls_topN{i}.Coefficients.Estimate;
    subclasses_topN{i} = subclasses_(corrinds_topN);
    sigtypes_topN{i} = corrinds_topN;
    pvals_topN(i) = coefTest(mdls_topN{i});
    coefvals_topN(sigtypes_topN{i},i) = mdls_topN{i}.Coefficients.Estimate(2:end);
    pvals_topN_vars(sigtypes_topN{i},i) = mdls_topN{i}.Coefficients.pValue(2:end);
end

if lmplotting
    if length(datsetnames_) == 9
        f = figure('Units','inches','Position',[0,0,11,10]);   
    elseif length(datsetnames_) == 10
        f = figure('Units','inches','Position',[0,0,20,8]);
    else
        f = figure('Units','inches','Position',[0,0,18,15]);
    end
    datsetlabels = cellfun(@(x) strrep(x,'_',' '), datsetnames_,'UniformOutput',0);
    if isempty(cmap_)
        cmap = hsv(length(datsetnames_));
    else
        cmap = cmap_;
    end
    shapes = {'o','s','d','^','v','<','>','p','h','+','.','x'};
    for i = 1:length(datsetnames_)
        if length(datsetnames_) == 9
            subplot(3,3,i); hold on;
        elseif length(datsetnames_) == 10
            subplot(2,5,i); hold on;
        else
            subplot(3,4,i); hold on;
        end
        scatter(Y_preds_topN{i},Y_ts{i},75,cmap(i,:),shapes{i});
        h = lsline; set(h,'LineWidth',2,'Color','k','LineStyle','--');
        max_x = max(Y_preds_topN{i}); max_y = max(Y_ts{i});
        min_x = min(Y_preds_topN{i}); min_y = min(Y_ts{i});
        xlim([min_x max_x]); ylim([min_y max_y*1.05]);
        xticks([min_x (max_x+min_x)/2 max_x]); yticks([min_y (max_y+min_y)/2 max_y]);
        if round(min_x,1) ~= 0 
            xticklabels({num2str(min_x,'%.1f'),num2str((max_x+min_x)/2,'%.1f'),...
                num2str(max_x,'%.1f')});
        else
            xticklabels({'0',num2str((max_x+min_x)/2,'%.1f'),...
                num2str(max_x,'%.1f')});
        end
%         if strcmp(datsetnames_{i},'Clavaguera')
%             yticklabels({num2str(min_y,'%.3f'),num2str((max_y+min_y)/2,'%.2f'),...
%                     num2str(max_y,'%.2f')});
%         else
        if round(min_y,1) ~= 0 
            yticklabels({num2str(min_y,'%.1f'),num2str((max_y+min_y)/2,'%.1f'),...
                num2str(max_y,'%.1f')});
        else
            yticklabels({'0',num2str((max_y+min_y)/2,'%.1f'),...
                num2str(max_y,'%.1f')});
        end
%         end

        pstr = '';
        if pvals_topN(i) < 0.01/length(datsetnames_) % Bonferroni
            pstr = [pstr '^*'];
            if pvals_topN(i) < 0.001/length(datsetnames_)
                pstr = [pstr '^*'];
                if pvals_topN(i) < 0.0001/length(datsetnames_)
                    pstr = [pstr '^*'];
                end
            end
        end
        % ax = gca; ax.YAxis.Exponent = -1; ax.XAxis.Exponent = -1;
        text(0.05*(max_x-min_x)+min_x, 0.85*(max_y-min_y)+min_y,...
            {sprintf('R^2 = %.2f%s',mdls_topN{i}.Rsquared.Adjusted,pstr),...
            sprintf('n = %d',length(subclasses_topN{i}))},'FontName','Times','FontSize',18);
        title(datsetlabels{i},'FontSize',24);
        set(gca,'FontSize',20,'FontName','Times','box','on');
    end
    han=axes(f,'visible','off'); 
    han.XLabel.Visible='on';
    han.YLabel.Visible='on';
    ylh = ylabel(han,'Observed Pathology at End Time Point','FontSize',24,...
        'FontName','Times','FontWeight','bold');
    ylh.Position(1) = ylh.Position(1) - abs(ylh.Position(1) * 1.25);
    xlh = xlabel(han,'Predicted Pathology at End Time Point','FontSize',24,...
        'FontName','Times','FontWeight','bold');
    xlh.Position(2) = xlh.Position(2) - abs(xlh.Position(2) * 0.75);
    if savenclose
        if strcmp(tpt_,'end')
            print([figdir_ filesep sprintf('LinearModelPlots_Coeffs_Top%d_%s_t_%s',numsigtypes_,datasource,tpt_)],'-dtiffn','-r600'); close;
        else
            print([figdir_ filesep sprintf('LinearModelPlots_Coeffs_Top%d_%s_t%d',numsigtypes_,datasource,tpt_)],'-dtiffn','-r600'); close;
        end
    end
end